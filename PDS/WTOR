//SOMITCWW JOB (xxxxxxxx,xxxx,1439,9999,9999),WTOR-SOMITCW,
//             CLASS=x,MSGCLASS=x,
//             NOTIFY=SOMITCW,REGION=6M,  ASM needs REGION if concat.
//             PERFORM=x,COND=(0,NE)
//HLASMCL EXEC HLASMCL,PARM.C=(OBJECT,NODECK,TERM,LIST,RENT),
//             PARM.L=(MAP,LIST,XREF,RENT)
PASS     TITLE 'Inform the Operator when to Open and Close CICS files'
         PRINT DATA
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*       This program will display control cards to the operator
*     to tell him when to open and close CICS files.
*
*       A reply is accepted from the operator to indicate when
*     he has completed the request.  The reply must match the
*     first eight characters in the last control card.
*
*       The control card ddname is SYSIN:
*       Column 1 thru 8 is the password.
*       Column 9 thru 72 is the display data.
*       Column 73 thru 80 is ignored.
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
WTOR     CSECT ,
         SAVE  (14,12),,WTOR.&SYSDATE..&SYSTIME Save caller's registers
         LR    R12,R15            Set base register
         USING WTOR,R12           Identify base register
         GETMAIN R,LV=WORKSIZE    Get storage for work area
         XC    0(256,R1),0(R1)    Clear the work area size
         ST    R13,4(,R1)         Save old save area address
         ST    R1,8(,R13)         Connect pointers
         LR    R13,R1             Move new save area address to R13
         USING WORKAREA,R13       Give assembler the work area base
         MVC   SYSIN,DUMSYSIN     Move the pattern DCB to work area
         MVC   WTO,DUMWTO         Move the pattern WTO to work area
         MVC   WTOR1,DUMWTOR      Move the pattern WTOR to work area
         LA    R1,REPLY           Load address of the reply area
         ST    R1,WTOR1           Put reply area address in WTOR
         OI    WTOR1,X'80'        Indicate only one WTOR
         LA    R1,ECB             Load addr.of the Event Control Block
         ST    R1,WTOR1+4         Put Event Control Block addr.in WTOR
         MVI   OPENCLOS,X'80'     Indicate one address to OPEN or CLOSE
         OPEN  (SYSIN,INPUT),MF=(E,OPENCLOS)  Open input file
         GET   SYSIN              Get first record
         MVC   INPUT,0(R1)        Save record for display
         MVI   SWITCH,1           Indicate at least one record was read
GET      EQU   *
         GET   SYSIN              Get input record
         MVC   WTO+4(64),INPUT+8  Move old record into display
         MVC   INPUT,0(R1)        Save new input data
         WTO   MF=(E,WTO)         Display all messages except last
         B     GET                Get the next control card
         SPACE 3
EODAD    EQU   *
         CLI   SWITCH,1           See if at least one record
         BNE   ABEND              Abend if no card images accepted
         OC    INPUT(8),SPACES    Upper case the password from SYSIN
         MVC   WTOR1+12(64),INPUT+8  Move current message for display
RETRY    EQU   *
         MVC   REPLY,SPACES       Clear the reply area
         WTOR  MF=(E,WTOR1)       Display and Accept the response
         WAIT  ECB=ECB            Wait for reply
         MVI   ECB,0              Clear first byte of ECB
         OC    REPLY,SPACES       Upper case the replied password
         CLC   REPLY,INPUT        See if the correct password
         BNE   RETRY              If not correct, re-issue the WTOR
         SPACE 3
         CLOSE SYSIN,MF=(E,OPENCLOS)  Close the input file
         LR    R1,R13             Save work area location for FREEMAIN
         L     R13,SAVE+4         Restore caller's save area address
         FREEMAIN RU,LV=WORKSIZE,A=(1)  Free the work area
         L     R14,12(,R13)       Restore return address
         LA    R15,0              Set return code to zero
         LM    R0,R12,20(R13)     Restore caller's registers 0 - 12
         BR    R14                Return to caller
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  Abend routines
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
ABEND    EQU   *
         MVC   REPLY,SPACES       Clear the reply area
         MVC   WTOR1+12(64),ABENDMSG  Put abend message in WTOR list
* 'WTOR - No input cards read, Call Tech Support, Reply "C".
         WTOR  MF=(E,WTOR1)       Display and Accept the response
         WAIT  ECB=ECB            Wait for reply
         MVI   ECB,0              Clear first byte of ECB
         CLC   REPLY,C            See if "C" was replied
         BNE   ABEND              Ask again if reply is not correct
         ABEND 101                101 because someone's hung up on 101s
         SPACE 3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  Constants
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
C        DC    CL8'C '            Constant to check ABEND reply
SPACES   DC    CL8' '             Constant of spaces
ABENDMSG DC    CL64'WTOR - No input cards read, Call Tech Support, ReplC
               y "C".'            57 byte abend message
         SPACE 3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  Pattern control blocks
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
DUMSYSIN DCB   DDNAME=SYSIN,      DD name of SYSIN                     C
               DSORG=PS,          Data Set Org. is Physical Sequential C
               RECFM=FB,          Record format is Fixed Blocked       C
               LRECL=80,          Logical Record Length is 80 bytes    C
               EODAD=EODAD,       End of data address is EODAD         C
               MACRF=GL           MACRO reference is GET Locate
SYSINSIZ EQU   *-DUMSYSIN         Size of DCB
         SPACE 3
DUMWTO   WTO   'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxC
               xxxxxxxxx',ROUTCDE=(1,11),DESC=2,MF=L
WTOSIZE EQU   *-DUMWTO            Size of the WTO list
         SPACE 3
DUMWTOR  WTOR  'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxC
               xxxxxxxxx',REPLY-REPLY,8,ECB-ECB,ROUTCDE=(1,11),MF=L
WTORSIZE EQU   *-DUMWTOR          Size of the WTOR list
         SPACE 3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  Work area DSECT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
WORKAREA DSECT ,
SAVE     DS    18F                Register save area
ECB      DS    XL8                Event Control Block for reply
OPENCLOS DS    XL8                Double size OPEN/CLOSE Parameter list
SWITCH   DS    XL1                Good run switch
* Warning, only the first 256 bytes of the work area are zeroed
         DS    0D                 Get back to double word alignment
SYSIN    DS    XL(SYSINSIZ)       Input DCB area
WTO      DS    XL(WTOSIZE)        Write To Operator MACRO list
WTOR1    DS    XL(WTORSIZE)       Write To Operator Reply MACRO list
REPLY    DS    CL8                Reply accepted from the operator
INPUT    DS    CL80               Input record area
WORKSIZE EQU   *-WORKAREA         Size of work area DSECT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  Register Equates
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 1
R0       EQU   0                  Register Equate
R1       EQU   1                  Register Equate
R2       EQU   2                  Register Equate
R3       EQU   3                  Register Equate
R4       EQU   4                  Register Equate
R5       EQU   5                  Register Equate
R6       EQU   6                  Register Equate
R7       EQU   7                  Register Equate
R8       EQU   8                  Register Equate
R9       EQU   9                  Register Equate
R10      EQU   10                 Register Equate
R11      EQU   11                 Register Equate
R12      EQU   12                 Register Equate
R13      EQU   13                 Register Equate
R14      EQU   14                 Register Equate
R15      EQU   15                 Register Equate
         SPACE 1
         END   ,
//L.SYSLMOD DD DSN=xxxx.xxxxLIB,DISP=SHR,SPACE=
   NAME WTOR
